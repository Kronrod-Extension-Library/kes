Kronrod Extension Search
########################

The Makefile can generate 3 useful programs:

* 'kes' by calling 'make bkes'
* 'kes_enumerate' by calling 'make ekes'
* 'kes_rec_enumerate' by calling 'make rekes'

There is also a test program generated by 'make test'.
The polynomial type can be specified as argument to make
via 'POLY=P' where 'P' is one of:

* 'LEGENDRE'
* 'LAGUERRE'
* 'HERMITE'

All code can be compiled to produce minimal output by
setting 'PRINTLOG=0'. For detailed help, run the programs
without any arguments.


Exhaustive search for Kronrod Extensions
----------------------------------------

1. Call 'kes_rec_enumerate' like:
   ./kes_rec_enumerate n pmax recmax > recs_n_pmax_recmax.dat
   for all interesting values of n, pmax and recmax.

2. Call 'graph_rules.py' to generate a dot file:
   python graph_rules.py recs_n_pmax_recmax.dat
   This will give a file called 'graph_n_pmax_recmax.dot'

3. Make a figure by calling 'dot' either of:
   circo graph_n_pmax_recmax.dot -Tpng -o graph_n_pmax_recmax.png
   dot graph_n_pmax_recmax.dot -Tpng -o graph_n_pmax_recmax.png

4. Call 'get_all_rules.sh' in a directory with 'recs_*.dat' files
   This will give a file called 'all_rules.dat' containing line
   by line the extension tower.

5. Call 'build_rulecomputer.py' like:
   python build_rulecomputer.py all_rules.dat
   This will give a file called 'compute_all_rules.sh' containing
   shell commands to compute nodes and weights of all rules.
